// Generated by view binder compiler. Do not edit!
package com.example.expirydetector.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.expirydetector.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCameraBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button captureButton;

  @NonNull
  public final Button grantPermissionButton;

  @NonNull
  public final TextView helpText;

  @NonNull
  public final View overlay;

  @NonNull
  public final TextView processingText;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final View scanBox;

  @NonNull
  public final PreviewView viewFinder;

  private FragmentCameraBinding(@NonNull ConstraintLayout rootView, @NonNull Button captureButton,
      @NonNull Button grantPermissionButton, @NonNull TextView helpText, @NonNull View overlay,
      @NonNull TextView processingText, @NonNull ProgressBar progressBar, @NonNull View scanBox,
      @NonNull PreviewView viewFinder) {
    this.rootView = rootView;
    this.captureButton = captureButton;
    this.grantPermissionButton = grantPermissionButton;
    this.helpText = helpText;
    this.overlay = overlay;
    this.processingText = processingText;
    this.progressBar = progressBar;
    this.scanBox = scanBox;
    this.viewFinder = viewFinder;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCameraBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCameraBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_camera, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCameraBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.captureButton;
      Button captureButton = ViewBindings.findChildViewById(rootView, id);
      if (captureButton == null) {
        break missingId;
      }

      id = R.id.grantPermissionButton;
      Button grantPermissionButton = ViewBindings.findChildViewById(rootView, id);
      if (grantPermissionButton == null) {
        break missingId;
      }

      id = R.id.helpText;
      TextView helpText = ViewBindings.findChildViewById(rootView, id);
      if (helpText == null) {
        break missingId;
      }

      id = R.id.overlay;
      View overlay = ViewBindings.findChildViewById(rootView, id);
      if (overlay == null) {
        break missingId;
      }

      id = R.id.processingText;
      TextView processingText = ViewBindings.findChildViewById(rootView, id);
      if (processingText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.scanBox;
      View scanBox = ViewBindings.findChildViewById(rootView, id);
      if (scanBox == null) {
        break missingId;
      }

      id = R.id.viewFinder;
      PreviewView viewFinder = ViewBindings.findChildViewById(rootView, id);
      if (viewFinder == null) {
        break missingId;
      }

      return new FragmentCameraBinding((ConstraintLayout) rootView, captureButton,
          grantPermissionButton, helpText, overlay, processingText, progressBar, scanBox,
          viewFinder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
